@{
    ViewData["Title"] = "PopcornView";
}
@{
    string formattedDate = DateTime.Now.ToString("MMM-d h.mmtt");
}
<!DOCTYPE html>
<head>
    <meta charset="UTF-8">
    <title>Burger list</title>
    <link href="css/bootstrap.min.css" rel="stylesheet">
    <link href="../css/styles.css" rel="stylesheet">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="../lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="../css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/CinemaSeatBooking.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css">
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <div class="d-flex justify-content-between align-items-center w-100 ml-5">
                    <div class="Popcorn d-inline-flex">
                        <h4 style="margin-right: 20px; margin-top: 3px;">Popcorn</h4>
                        <a class="nav-link text-dark" asp-controller="Burgers" asp-action="BurgerView" style="margin-right: 10px;">Burger and Sandwich</a>
                        <a class="nav-link text-dark" asp-controller="Beverage" asp-action="BeverageView">Beverage</a>
                    </div>
                    <div>
                        <div class="food-and-drink" style="display: inline-block; ">
                            <a class="custom-btn btn btn-primary" asp-controller="Home" asp-action="Index" role="button">Movies</a>
                        </div>
                        <div class="today-date" style="display: inline-block; margin-top: 10px; margin-right: 10px;">
                            <p style="margin-left:10px;">@formattedDate</p>
                        </div>
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <div class="custom-container" style="position: relative" ;>
        <div class="row with-sahdow">
            <div class="col-9 ml-5 mb-3 mt-3 m-5 ">
                <div class="row">
                    <div class="colu col-9 col-lg-3 col-md-4 col-sm-6 mb-3">
                        <a>
                            <div class="card selectable-card">
                                <img src="../Assets/Popcorn/pop1.jpg" class="card-img-top">
                                <div class="card-body">
                                    <h5 class="card-title">Sweet PopCorn</h5>
                                    <p class="card-text">70 Birr</p>
                                </div>
                            </div>
                        </a>
                    </div>
                    <div class="colu col-9 col-lg-3 col-md-4 col-sm-6 mb-3">
                        <a>
                            <div class="card selectable-card">
                                <img src="../Assets/Popcorn/pop3.jpg" class="card-img-top">
                                <div class="card-body">
                                    <h5 class="card-title">Toffe Popcorn</h5>
                                    <p class="card-text">80 Birr</p>
                                </div>
                            </div>
                        </a>
                    </div>
                    <div class="colu col-9 col-lg-3 col-md-4 col-sm-6 mb-3">
                        <a>
                            <div class="card selectable-card">
                                <img src="../Assets/Popcorn/pop4.jpg" class="card-img-top">
                                <div class="card-body">
                                    <h5 class="card-title">Nacho Popcorn</h5>
                                    <p class="card-text">90 Birr</p>
                                </div>
                            </div>
                        </a>
                    </div>
                    <div class="colu col-9 col-lg-3 col-md-4 col-sm-6 mb-3">
                        <a>
                            <div class="card selectable-card">
                                <img src="../Assets/Popcorn/pop2.jpg" class="card-img-top">
                                <div class="card-body">
                                    <h5 class="card-title">Ranch PopCorn</h5>
                                    <p class="card-text">80 Birr</p>
                                </div>
                            </div>
                        </a>
                    </div>
                    <div class="colu col-9 col-lg-3 col-md-4 col-sm-6 mb-3">
                        <a>
                            <div class="card selectable-card">
                                <img src="../Assets/Popcorn/pop5.jpg" class="card-img-top">
                                <div class="card-body">
                                    <h5 class="card-title">Tex-Mex Popcorn</h5>
                                    <p class="card-text">75 Birr </p>
                                </div>
                            </div>
                        </a>
                    </div>
                    <div class="colu col-9 col-lg-3 col-md-4 col-sm-6 mb-3">
                        <a>
                            <div class="card selectable-card">
                                <img src="../Assets/Popcorn/pop6.jpg" class="card-img-top">
                                <div class="card-body">
                                    <h5 class="card-title">Peppermint Popcorn</h5>
                                    <p class="card-text">100 Birr</p>
                                </div>
                            </div>
                        </a>
                    </div>
                </div>
            </div>
            <div class="col-lg-2 col-md-2 ml-5 mt-3 mr-5">
                <partial name="_Bill" />
            </div>
        </div>
        <script>
            const selectableCards = document.querySelectorAll('.selectable-card');
            const selectedCardsContainer = document.getElementById('selected-cards-container');
            const selectedCards = [];

            function updateSelectedCardsDisplay() {
                if (selectedCards.length > 0) {
                    selectedCardsContainer.style.display = 'block';
                    selectedCardsContainer.style.border = '1px solid black';
                } else {
                    selectedCardsContainer.style.display = 'none';
                    selectedCardsContainer.style.border = 'none';
                }
            }

            selectableCards.forEach((card, index) => {
                card.addEventListener('click', () => {
                    card.classList.toggle('selected');
                    if (card.classList.contains('selected')) {
                        const cardTitle = card.querySelector('.card-title').textContent;
                        const cardPrice = parseFloat(card.querySelector('.card-text').textContent);
                        const quantity = 1;
                        selectedCards.push({ title: cardTitle, price: cardPrice, quantity, index });
                    } else {
                        const selectedCardIndex = selectedCards.findIndex(selectedCard => selectedCard.index === index);
                        if (selectedCardIndex !== -1) {
                            selectedCards.splice(selectedCardIndex, 1);
                        }
                    }
                    updateSelectedCardsDisplay();
                    renderSelectedCards();
                });
            });

            function renderSelectedCards() {
                selectedCardsContainer.innerHTML = '';
                let totalPrice = 0;
                selectedCards.forEach(selectedCard => {
                    const cardDiv = document.createElement('div');
                    cardDiv.className = 'selected-card';

                    // Display card details
                    const cardDetails = document.createElement('div');

                    // Set the price to zero if the quantity is less than or equal to zero
                    let updatedCalculatedPrice = selectedCard.quantity > 0 ? selectedCard.price * selectedCard.quantity : 0;

                    cardDetails.textContent = `${selectedCard.title} - ${updatedCalculatedPrice} Birr`;

                    // Quantity input
                    const quantityInput = document.createElement('input');
                    quantityInput.type = 'number';
                    quantityInput.value = selectedCard.quantity;

                    // Add an input event listener to update the displayed price when the quantity changes
                    quantityInput.addEventListener('input', () => {
                        let newQuantity = parseInt(quantityInput.value, 10);

                        // Ensure the quantity is a positive integer
                        newQuantity = Math.max(newQuantity, 0);

                        selectedCard.quantity = newQuantity;

                        // Set the price to zero if the quantity is less than or equal to zero
                        updatedCalculatedPrice = selectedCard.quantity > 0 ? selectedCard.price * selectedCard.quantity : 0;

                        cardDetails.textContent = `${selectedCard.title} - ${updatedCalculatedPrice} Birr`;

                        // Update the total price dynamically
                        updateTotalPrice();
                    });

                    // Add a 'keydown' event listener to prevent entering non-numeric or negative values
                    quantityInput.addEventListener('keydown', (event) => {
                        if (!/^\d+$/.test(event.key) || event.key === '-') {
                            event.preventDefault();
                        }
                    });

                    // Create a container for card details and quantity input
                    const cardContainer = document.createElement('div');
                    cardContainer.className = 'card-container';

                    // Append elements to the container
                    cardContainer.appendChild(cardDetails);
                    cardContainer.appendChild(quantityInput);

                    // Append the container to the selected cards container
                    cardDiv.appendChild(cardContainer);
                    selectedCardsContainer.appendChild(cardDiv);

                    // Accumulate the total price
                    totalPrice += updatedCalculatedPrice;
                });

                // Display the total price dynamically
                const totalDiv = document.createElement('div');
                totalDiv.className = 'total-price';
                totalDiv.textContent = `Total Price: ${totalPrice} Birr`;
                selectedCardsContainer.appendChild(totalDiv);
            }



            function updateTotalPrice() {
                let totalPrice = 0;
                selectedCards.forEach(selectedCard => {
                    totalPrice += selectedCard.price * selectedCard.quantity;
                });

                // Find and update the total price display dynamically
                const totalDiv = selectedCardsContainer.querySelector('.total-price');
                if (totalDiv) {
                    totalDiv.textContent = `Total Price: ${totalPrice} Birr`;
                }
            }
        </script>
        <div class="position-fixed bottom-0 end-0 mr-3 mb-3 d-inline-flex">
            <a class="btn btn-primary" style="margin-right: 5px; margin-bottom: 20px;" asp-controller="Seat" asp-action="SeatView" type="button">Back</a>
            <a class="btn btn-primary" style="margin-right: 20px; margin-bottom: 20px;" asp-controller="Beverage" asp-action="BeverageView" type="button">Next</a>
        </div>
    </div>
</body>