@model MovieModel
@{
    ViewData["Title"] = "Food And Beverage";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://www.youtube.com/iframe_api"></script>
    <style>
        body {
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column; /* Stack children vertically */
        }

        .background-container {
            position: relative;
            height: 60vh; /* Set height to 75% of the viewport height */
            overflow: hidden;
        }

        .background-image {
            height: 100%; /* Set height to 100% of the container */
            display: flex;
            align-items: center;
            justify-content: center; /* Center the content vertically */
            position: relative; /* Set position to relative for absolute positioning */
        }

            .background-image::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: url('@Model.BackdropPath') center/cover no-repeat; /* Set backdrop as background */
                filter: blur(2px); /* Add a 5px blur effect to the background image */
            }
        .info-container {
            background-color: rgba(255, 255, 255, 0.4);
            padding: 20px;
            border-radius: 8px;
            margin-top: -30px; /* Adjust margin to overlap with the background image */
            z-index: 2; /* Bring the content to the front */
        }

            .info-container img {
                width: 300px; /* Set the width to your desired value */
                height: 450px; /* Set the height to your desired value */
                object-fit: cover; /* Maintain aspect ratio and cover the container */
                border-radius: 8px; /* Add border-radius for a rounded look */
            }

        h3 {
            margin-top: 10px;
            margin-bottom: 10px;
            font-weight: bold;
            font-size: 24px;
            color: white; /* Blue color for CompanyName */
            font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
        }

        h4, p {
            margin-top: 10px;
            margin-bottom: 10px;
            color: white;
        }

            .companyName{
                color: black;
                font-size: 40px;
        }
        /* Add this CSS to your stylesheet */
        .btn:focus,
        .btn:active {
            outline: none !important;
            box-shadow: none !important;
        }
        .cast-section {
            overflow-x: auto; /* Enable horizontal scrolling */
            white-space: nowrap; /* Prevent line breaks */
            background-color: rgba(255, 255, 255, 0.8);
            padding: 20px;
            z-index: 1; /* Bring the cast section to the front */
        }

        .cast-card {
            display: inline-block;
            margin: 0 10px; /* Adjust margin for spacing */
            max-width: 180px; /* Set the maximum width of the cast card */
            text-align: center;
            
        }

            .cast-card img {
                max-width: 100%;
                max-height: 200px; /* Set the maximum height of the cast card image */
                height: auto;
                border-radius: 8px;
            }

        .cast-card-title {
            margin-top: 10px;
            font-weight: bold;
        }

    </style>
</head>
<body>
    <div class="background-container">
        <div class="background-image">
            <!-- Empty container to hold the background image -->
            <div class="info-container container">
                <div class="row">
                    <div class="col-md-4">
                        <img src="@Model.PosterUrl" alt="Movie Poster">
                    </div>
                    <div class="col-md-8">
                        <h4 class="companyName" style="background-color:rgba(0,0,0,0.3) ">@Model.CompanyName</h4>
                        <h1 style="color: white">@Model.MovieName</h1>
                        <h4>Overview</h4>
                        <p>@Model.Overview</p>
                        <div>
                            @functions {
                                // Helper function to get the color based on genre
                                string GetGenreColor(string genreName)
                                {
                                    switch (genreName)
                                    {
                                        case "Action": return "#FF5733";
                                        case "Adventure": return "#4CAF50";
                                        case "Animation": return "#2196F3";
                                        case "Comedy": return "#FFC107";
                                        case "Crime": return "#9C27B0";
                                        case "Documentary": return "#607D8B";
                                        case "Drama": return "#FF9800";
                                        case "Family": return "#795548";
                                        case "Fantasy": return "#9E9E9E";
                                        case "History": return "#673AB7";
                                        case "Horror": return "#E91E63";
                                        case "Music": return "#FFEB3B";
                                        case "Mystery": return "#3F51B5";
                                        case "Romance": return "#FF4081";
                                        case "Science Fiction": return "#00BCD4";
                                        case "TV Movie": return "#8BC34A";
                                        case "Thriller": return "#2196F3";
                                        case "War": return "#FF5722";
                                        case "Western": return "#795548";
                                        default: return "lightgray"; // Default color
                                    }
                                }
                            }
                            <h4>Genres</h4>
                            @foreach (var genre in Model.Genres)
                            {
                                <div style="display: inline-block; margin-right: 15px; padding: 5px; background-color:@GetGenreColor(genre.Name); color:white; border-radius:7px;">@genre.Name</div>
                            }
                        </div>
                        <div>
                            @foreach (var genres in Model.GenreNames)
                            {
                                <div class="genres">
                                    @genres
                                </div>
                            }
                        </div>
                        <h4 style="display: inline-block; margin-right: 10px;">Runtime:</h4>
                        <p style="display: inline-block;">@Model.FormattedRunTime</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Existing code ... -->

    <div class="container py-5">
        <h4 style="color: black">
            Casts
        </h4>
        <div class="cast-section">
            @foreach (var castMember in Model.Cast.Take(10))
            {
                <div class="cast-card">
                    @if (castMember.ProfilePath == "https://image.tmdb.org/t/p/w500")
                    {
                        <img src="../Assets/NoCastImage.jpg" alt="@castMember.Name">
                    }
                    else
                    {
                        <img src="@castMember.ProfilePath" alt="@castMember.Name">
                    }
                    <div class="cast-card-title">@castMember.Name</div>
                </div>
            }
        </div>

        <div class="row">
            <div class="col-md-6" style="margin-top: 30px;">
                <div id="youtubePlayer">
                    @if (!string.IsNullOrEmpty(Model.YoutubeKey))
                    {
                        <iframe width="560" height="315" src="https://www.youtube.com/embed/@Model.YoutubeKey?rel=0" frameborder="0" allowfullscreen></iframe>
                    }
                    else
                    {
                        <p>No trailer available</p>
                    }
                </div>
            </div>

            <div class="col-md-6" style="margin-top: 30px;">
                <div>
                    <h2>Schedules</h2>
                    @foreach (var schedule in Model.Schedules)
                    {
                        <div class="card mb-3">
                            <div class="row g-0">
                                <div class="col-md-6" style="display: flex; flex-direction: column; align-items: center; text-align: center;">
                                    <div class="card-body">
                                        <p class="card-title" style="color: black; margin-bottom: 0;">
                                            @schedule.HallName
                                            @if (@schedule.Dimension == "2D")
                                            {
                                                <span class="badge bg-primary">@schedule.Dimension</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">@schedule.Dimension</span>
                                            }
                                        </p>
                                        @{
                                            string utcTimeString = schedule.StartTime;

                                            if (DateTime.TryParse(utcTimeString, out DateTime utcTime))
                                            {
                                                DateTime ethiopianTime = TimeZoneInfo.ConvertTimeBySystemTimeZoneId(utcTime, "Africa/Addis_Ababa");
                                                // Add a 6-hour offset to match Ethiopia's local time interpretation
                                                ethiopianTime = ethiopianTime.AddHours(6);

                                                <p class="card-text" style="color: black; margin: 0;">@utcTime.ToString("h.mm tt")</p>
                                                <p class="card-text" style="color: black; margin: 0;">@ethiopianTime.ToString("h.mm tt") (Local)</p>
                                            }
                                            else
                                            {
                                                <p class="card-text" style="color: red; margin: 0;">Invalid date format</p>
                                            }
                                        }
                                    </div>
                                </div>
                                <div class="col-md-3 d-flex align-items-center justify-content-center">
                                    @if (schedule.Status == "CLOSED")
                                    {
                                        <button class="btn btn-danger" type="button" disabled>Closed</button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-success " onclick="onScheduleButtonClick('@schedule.SpaceCode', '@Model.CompanyTinNumber.ToString()', '@schedule.Code','@schedule.NPrice')" type="button">
                                            Book Now <br> @schedule.NPrice ETB
                                        </button>
                                    }
                                </div>

                                @if (schedule.VIP != null)
                                {
                                    <div class="col-md-3 d-flex align-items-center justify-content-center">
                                        @if (schedule.VIP.Status == "CLOSED")
                                        {
                                            <button class="btn btn-danger" type="button" disabled>Closed</button>
                                        }
                                        else
                                        {
                                            <button class="btn btn-warning" onclick="onScheduleButtonClick('@schedule.VIP.SpaceCode', '@Model.CompanyTinNumber.ToString()', '@schedule.VIP.Code','@schedule.VIP.VPrice')" type="button">Book Vip <br> @schedule.VIP.VPrice ETB</button>
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <script>
        function onScheduleButtonClick(spacecode, companyTinNumber, code, price) {

            var form = $('<form action="/SeatLayout/SeatArrangement" method="post">' +
                '<input type="hidden" name="spacecode" value="' + spacecode + '" />' +
                '<input type="hidden" name="companyTinNumber" value="' + companyTinNumber + '" />' +
                '<input type="hidden" name="code" value="' + code + '" />' +
                '<input type="hidden" name="price" value="' + price + '" />' +
                '</form>');
            // Append the form to the body
            $('body').append(form);

            // Submit the form
            form.submit();
        }
    </script>

    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>