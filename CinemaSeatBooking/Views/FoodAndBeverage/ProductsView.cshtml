@model ProductsViewModel
<!DOCTYPE html>
<html lang="en">
    <head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="../css/styles.css" rel="stylesheet">
    <link rel="stylesheet" href="~/CinemaSeatBooking.styles.css" asp-append-version="true" />
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <style>
        .custom-container {
            padding-left: 35px;
            padding-right: 35px;
        }

        .card-img-top {
            height: 230px;
            width: 100%;
        }

        .btn-circle {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 0;
            font-size: 14px;
        }

        #selected-items-container {
            margin-top: 20px;
            border: 1px solid #ddd;
            padding: 10px;
            border-radius: 5px;
        }
        .selected-item {
            margin-bottom: 5px;
            padding: 5px;
            background-color: #f0f0f0;
            border: 1px solid #ccc;
            border-radius: 3px;
        }

        .btn-outline-primary {
            color: #28a745; /* Green color */
            border-color: #28a745;
        }

            .btn-outline-primary:hover {
                background-color: #28a745; /* Green color on hover */
                color: #fff; /* Text color on hover */
            }
    </style>
    </head>
    <body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <div class="d-flex justify-content-between align-items-center w-100 ml-5">
                    <div class="Popcorn d-inline-flex">
                        <h4 style="margin-top: 3px;">Food And Beverage</h4>
                    </div>
                    <div>
                        <!--
                            <div class="food-and-drink" style="display: inline-block; margin-right: 20px;">
                            <a class="custom-btn btn btn-primary" asp-controller="Home" asp-action="Index" role="button">Movies</a>
                        </div>
                        -->
                        <div style="text-align: center; display: inline-block; margin-right: 20px; margin-top: 3px;" id="priceContainer">
                            <button id="skipButton" class="btn btn-outline-primary">Skip</button>
                        </div>
                        <div id="UpdatedCountDownTimer" style="display:none; display: inline-block; margin-right: 20px; margin-top: 3px;"></div>
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <div class="custom-container" style="position: relative; padding-right: 0; padding-left: 0">
        <div class="row">
            <div class="col-9 ml-5 mb-3 mt-3 m-5 ">
                @if (Model != null && Model.Products.Any())
                {
                    <div class="container">
                        <div class="row">
                            @foreach (var product in Model.Products)
                            {
                                @if (product.Children != null && product.Children.Any())
                                {
                                    var categoryProducts = product.Children.ToList();
                                    for (int i = 0; i < categoryProducts.Count; i++)
                                    {
                                        var categoryProduct = categoryProducts[i];

                                        <div class="col-12 mb-3">
                                            <h5>@categoryProduct.Name</h5>
                                        </div>

                                        @if (categoryProduct.Children != null && categoryProduct.Children.Any())
                                        {
                                            foreach (var articleProduct in categoryProduct.Children)
                                            {
                                                <div class="col-9 col-lg-3 col-md-4 col-sm-6 mb-3">
                                                    <div class="card selectable-card">
                                                        <img src="@articleProduct.Pictures.FirstOrDefault()" class="card-img-top">
                                                        <div class="card-body" style="display: flex; flex-direction: column; align-items: center;">
                                                            <h6 class="card-title">@articleProduct.Name</h6>
                                                            <p class="card-text" style="margin: 0; text-align: center;">@articleProduct.Price Birr</p>

                                                            <!-- Quantity Control Division (Initially Hidden) -->
                                                            <div class="quantity-control d-flex" style="margin-top: 5px; text-align: center; display: none !important;">
                                                                <button class="btn btn-outline-danger btn-circle" style="padding: 6px; font-size: 12px;" onclick="decrementValue()">-</button>
                                                                <p class="quantity" style="padding: 5px; font-size: 12px; margin: 0 ;">0</p>
                                                                <button class="btn btn-outline-primary btn-circle" style="padding: 6px; font-size: 12px; border-color: #28a745;" onclick="incrementValue()">+</button>
                                                            </div>

                                                            <!-- Show Button -->
                                                            <button class="btn btn-sm btn-outline-primary" style="margin-top: 5px;" onclick="showQuantityControl(this)">Add to Cart</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        }
                                        @if (i < categoryProducts.Count - 1)
                                        {
                                            <div class="col-12">
                                                <hr/>
                                            </div>
                                        }
                                    }
                                }
                            }
                        </div>
                    </div>
                }
                else
                {
                    <p>No products available.</p>
                }
            </div>
            <div class="col-lg-2 col-md-2 ml-5 mt-3 mr-5">
                <div id="selected-items-container">
                    Cart
                </div>
            </div>
        </div>
    </div>
    
    <script>
        var storedRemainingTime = sessionStorage.getItem('remainingTime');
        var updatedRemainingTime = parseInt(storedRemainingTime) + (sessionStorage.getItem('secondsAdded') === 'true' ? 0 : 60);
        var secondsAdded = sessionStorage.getItem('secondsAdded');
        var companyTin = "@Model.CompanyTinNumber";
        var movieScheduleCode = "@Model.MovieScheduleCode";

        var selectedSeats = JSON.parse(sessionStorage.getItem('selectedSeats')) || [];

        function extendCachedSeats() {
            if (!secondsAdded) {
                var endpoint = 'https://api-hulubeje.cnetcommerce.com/api/ManageSeatCache/ExtendCachedSeatsForSchedule';

                var payload = {
                    "schedule": movieScheduleCode,
                    "allSeats": selectedSeats,
                    "orgTin": companyTin,
                    "seconds": updatedRemainingTime
                };

                $.ajax({
                    url: endpoint,
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(payload),
                    success: function (response) {
                        console.log('Success:', response);
                    },
                    error: function (error) {
                        console.error('Error:', error);
                    }
                });
            }
            else{
                console.log("already extended");
            }
        }

        function startCountdownTimer() {
            $('#UpdatedCountDownTimer').show();
            countdownInterval = setInterval(function () {
                $('#UpdatedCountDownTimer').text("Time remaining: " + formatTime(updatedRemainingTime));
                updatedRemainingTime--;

                if (updatedRemainingTime <= 0) {
                    clearInterval(countdownInterval);
                }
                sessionStorage.setItem("remainingTime", updatedRemainingTime);
            }, 1000);

            // Set the flag to indicate that 60 seconds have been added
            sessionStorage.setItem('secondsAdded', 'true');

            console.log("Updated Remaining Time: " + updatedRemainingTime);
        }

        function formatTime(seconds) {
            var min = Math.floor(seconds / 60);
            var sec = seconds % 60;
            return min + ":" + (sec < 10 ? "0" : "") + sec;
        }

        $(document).ready(function () {
            startCountdownTimer();
            extendCachedSeats();
        });

        console.log("Updated Remaining Time: " + updatedRemainingTime);

        document.addEventListener('DOMContentLoaded', function () {
            // Use event delegation to handle clicks on dynamically generated cards
            document.addEventListener('click', function (event) {
                if (event.target.matches('.btn-outline-danger')) {
                    decrementValue(event.target);
                } else if (event.target.matches('.btn-outline-primary')) {
                    incrementValue(event.target);
                }
            });


        });

        const selectedItemsContainer = document.getElementById('selected-items-container');
        const selectedItems = [];

        function showQuantityControl(button) {

            // Find the parent card element
            var cardBody = button.closest('.card-body');

            // Toggle visibility of quantity control and show button
            var quantityControl = cardBody.querySelector('.quantity-control');
            quantityControl.style.display = quantityControl.style.display === 'flex' ? 'none' : 'flex';

            button.style.display = quantityControl.style.display === 'none' ? 'inline-block' : 'none';
        }

        function incrementValue(button) {
            // Find the associated quantity element
            var quantityElement = button.parentElement.querySelector('.quantity');
            let currentValue = parseInt(quantityElement.textContent, 10); // Default to 0 if NaN
            quantityElement.textContent = currentValue + 1;
            updateCardDisplay(quantityElement);
        }

        function decrementValue(button) {
            // Find the associated quantity element
            var quantityElement = button.parentElement.querySelector('.quantity');
            let currentValue = parseInt(quantityElement.textContent, 10) || 0; // Default to 0 if NaN
            if (currentValue > 0) {
                quantityElement.textContent = currentValue - 1;
                updateCardDisplay(quantityElement);
            }
        }

        function updateCardDisplay(quantityElement) {
            var cardContainer = quantityElement.closest('.card-body');
            var cardTitle = cardContainer.querySelector('.card-title');
            var cardText = cardContainer.querySelector('.card-text');

            var itemName = cardTitle.textContent;
            var itemPrice = parseFloat(cardText.textContent);

            var quantity = parseInt(quantityElement.textContent, 10);

            if (quantity > 0) {
                itemPrice *= quantity;

                var existingItem = selectedItems.find(item => item.name === itemName);

                if (!existingItem) {
                    selectedItems.push({ name: itemName, quantity: quantity, price: itemPrice });
                } else {
                    existingItem.quantity = quantity;
                    existingItem.price = itemPrice;
                }
            } else {
                selectedItems.splice(selectedItems.findIndex(item => item.name === itemName), 1);
            }

            renderSelectedItems();
        }

        function renderSelectedItems() {
            selectedItemsContainer.innerHTML = 'Cart';

            selectedItems.forEach(item => {
                var itemDiv = document.createElement('div');
                itemDiv.className = 'selected-item';

                // Apply CSS styles for positioning
                itemDiv.style.display = 'flex';
                itemDiv.style.justifyContent = 'space-between';
                itemDiv.style.padding = '5px';  // Adjust the padding as needed

                itemDiv.textContent = `${item.name}\u00A0\u00A0${item.quantity}\u00A0\u00A0${item.price.toFixed(2)} Birr`;
                selectedItemsContainer.appendChild(itemDiv);
            });
        }
    </script>
    </body>
</html>