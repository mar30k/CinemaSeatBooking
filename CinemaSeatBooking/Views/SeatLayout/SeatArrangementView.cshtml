@model CinemaSeatBooking.Models.SeatLayout
@{
    string formattedDate = DateTime.Now.ToString("MMM-d h.mmtt");
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <style>
        .container-xl {
            max-width: 100%;
            overflow-x: auto;
        }
            .buttons:hover{
                background-color: green;
                color: white;
                cursor: pointer;
            }

        .buttons {
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0;
            font-size: 10px;
            font-weight: 400;
            background: #fff;
            border: 1px solid #1ea83c;
            border-radius: 2px;
            color: #1ea83c;
            width: 100%;
            height: 100%;
        }

        .hall {
            width: 100%;
            height: 100%;
            overflow: hidden;
        }

            .hall .p {
                display: flex;
                align-items: center;
                justify-content: center;
                margin: 0;
                font-size: 10px;
                font-weight: 400;
                background: #fff;
                width: 100%;
                height: 100%;
            }

        .booked-seat {
            background-color: blue;
            color: white;
        }

    </style>

    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

    <script>
        var selectedSeats = [];
        var countdownInterval;
        var countdownTime = 60; // Countdown time in seconds
        var isBookingStarted = false;

        document.addEventListener("DOMContentLoaded", function () {
            var buttons = document.querySelectorAll('.buttons');
            var countdown;
            selectedSeats = retrieveSelectedSeatsFromStorage();
            document.body.addEventListener('click', function (event) {
                if (event.target.classList.contains('buttons')) {
                    var seatCode = event.target.id;
                    var seatStatus = event.target.getAttribute('data-seat-status');

                    var isBooked = seatStatus === 'booked';
                    var isSold = seatStatus === 'sold';
                    var isTaken = seatStatus === 'taken';

                    if (!isBookingStarted) {
                        startBooking();
                        isBookingStarted = true;
                    }

                    toggleSeatSelection(seatCode, isBooked || isSold);
                }
            });

            setInterval(function () {
                updateSeatInfo();
            }, 10000); // Update every 10000 milliseconds (10 seconds)

            function updateSeatInfo() {
                // Extract values from the SeatLayout model
                var companyTinNumber = "@Model.CompanyTinNumber"; // Replace with the actual property in your model
                var code = "@Model.MovieScheduleCode"; // Replace with the actual property in your model
                var spacecode = "@Model.SpaceCode"; // Replace with the actual property in your model
                // Use AJAX to fetch updated seat information
                $.get("/SeatLayout/GetUpdatedSeatInfo", { companyTinNumber: companyTinNumber, code: code, spacecode: spacecode }, function (data) {
                    // Update the seat information container with the fetched partial view or JSON data
                    $("#seatInfoContainer").html(data);
                    applyEventListeners();
                    updateButtonStatus();
                    updateSelectedSeatsUI();
                });
                console.log("updated the data");
            }

            function applyEventListeners() {
                var buttons = document.querySelectorAll('.buttons');
                buttons.forEach(function (button) {
                    button.addEventListener('click', function () {
                        // Your existing click event logic...
                    });
                });
            }

            function startBooking() {
                // Display modal only on the first click
                $('#bookingModal').modal('show');
                // Handle "OK" button click
                $('#okButton').one('click', function () {
                    // Close the modal
                    $('#bookingModal').modal('hide');

                    // Start the countdown only after clicking "OK"
                    countdown = countdownTime;
                    startCountdownTimer();
                });
            }

            function startCountdownTimer() {
                // Display the countdown timer div
                $('#countdownTimer').show();

                countdownInterval = setInterval(function () {
                    updateCountdownTimer();
                    countdown--;

                    if (countdown <= 0) {
                        clearInterval(countdownInterval);
                        resetBooking();
                        alert("Booking time expired. Please restart the booking process.");
                        location.reload(); // Refresh the page
                    }
                }, 1000);
            }

            function updateCountdownTimer() {
                $('#countdownTimer').text("Time remaining: " + formatTime(countdown));
            }

            function updateButtonStatus() {
                var skipButton = document.getElementById('skipButton');

                if (isBookingStarted) {
                    var seatCount = selectedSeats.length;
                    if (seatCount === 0) {
                        skipButton.innerText = "Skip";
                    } else {
                        skipButton.innerText = "You Will Pay " + (seatCount * parseFloat("@Model.Price")).toFixed(2) + " ETB for " + seatCount + " seats";
                    }

                } else {
                    skipButton.innerText = "Skip";
                }
            }

            // Handle "Cancel" button click
            $('#cancelButton').click(function () {
                // Close the modal
                $('#bookingModal').modal('hide');
                resetBooking();
            });

            function formatTime(seconds) {
                var min = Math.floor(seconds / 60);
                var sec = seconds % 60;
                return min + ":" + (sec < 10 ? "0" : "") + sec;
            }

            function resetBooking() {
                clearInterval(countdownInterval);
                var companyTinNumber = "@Model.CompanyTinNumber";
                var movieScheduleCode = "@Model.MovieScheduleCode";

                // Clear background color of selected seats only
                selectedSeats.forEach(function (selectedSeat) {
                    var button = document.getElementById(selectedSeat);
                    if (button) {
                        button.style.backgroundColor = "";
                    }
                });

                var urlRemove = 'https://api-hulubeje.cnetcommerce.com/api/ManageSeatCache/DeleteCachedSeatsForSchedule';
                $.ajax({
                    url: urlRemove,
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        schedule: movieScheduleCode, // Assuming these variables are still in scope
                        allSeats: selectedSeats, // Pass the selected seats array
                        orgTin: companyTinNumber // Assuming this variable is still in scope
                    }),
                    success: function (response) {
                        // Handle success
                        console.log(response);
                    },
                    error: function (error) {
                        // Handle error
                        console.error(error);
                    }
                });

                // Clear the selected seats array
                selectedSeats = [];
                saveSelectedSeatsToStorage();
                updateButtonStatus();
                isBookingStarted = false; // Reset booking flag
            }

            // Periodically fetch and update seat information
            function toggleSeatSelection(seatCode, isDisabled) {
                var index = selectedSeats.indexOf(seatCode);
                var companyTinNumber = "@Model.CompanyTinNumber";
                var movieScheduleCode = "@Model.MovieScheduleCode";
                var consignee = "0912141914"; // Keep the consignee same, as you mentioned

                var urlAdd = 'https://api-hulubeje.cnetcommerce.com/api/ManageSeatCache/SetCachedSeatsForSchedule' +
                    `?schedule=${movieScheduleCode}&seat=${seatCode}&consignee=${consignee}&orgTin=${companyTinNumber}`;

                var urlRemove = 'https://api-hulubeje.cnetcommerce.com/api/ManageSeatCache/DeleteCachedSeatsForSchedule';

                if (!isDisabled && index === -1) {
                    if (selectedSeats.length < 3) {
                        selectedSeats.push(seatCode);
                        $.ajax({
                            url: urlAdd,
                            type: 'POST',
                            success: function (response) {
                                // Handle success
                                console.log(response);
                            },
                            error: function (error) {
                                // Handle error
                                console.error(error);
                            }
                        });
                    } else {
                        var alertElement = document.getElementById("seatLimitAlert");
                        alertElement.style.display = "block";
                        setTimeout(function () {
                            alertElement.style.display = "none";
                        }, 2000);
                        return;
                    }
                } else if (!isDisabled) {
                    selectedSeats.splice(index, 1);
                    $.ajax({
                        url: urlRemove,
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({
                            schedule: movieScheduleCode,
                            allSeats: [seatCode],
                            orgTin: companyTinNumber
                        }),
                        success: function (response) {
                            // Handle success
                            console.log(response);
                        },
                        error: function (error) {
                            // Handle error
                            console.error(error);
                        }
                    });
                }
                // Toggle background color based on selection
                var button = document.getElementById(seatCode);
                if (button) {
                    button.style.backgroundColor = index === -1 ? "green" : "";
                }
                updateButtonStatus();
                console.log("Selected Seats: ", selectedSeats);

                saveSelectedSeatsToStorage();
                updateSelectedSeatsUI();
                return selectedSeats;
            }
            function initializeSeatSelection() {
                // Example: Attach click event to seat buttons
                var buttons = document.querySelectorAll('.buttons');
                buttons.forEach(function (button) {
                    button.addEventListener('click', function () {
                        // Handle seat selection logic
                        toggleSeatSelection(this.id);
                    });
                });

                // Example: Retrieve selected seats from session storage
                selectedSeats = retrieveSelectedSeatsFromStorage();

                // Update UI based on selected seats
                updateSelectedSeatsUI();
            }
            function saveSelectedSeatsToStorage() {
                sessionStorage.setItem('selectedSeats', JSON.stringify(selectedSeats));
            }

            function retrieveSelectedSeatsFromStorage() {
                var storedSelectedSeats = sessionStorage.getItem('selectedSeats');
                return storedSelectedSeats ? JSON.parse(storedSelectedSeats) : [];
            }
            // Function to update the UI based on selected seats
            function updateSelectedSeatsUI() {
                selectedSeats.forEach(function (seatCode) {
                    // Update the UI for each selected seat (e.g., change background color)
                    var button = document.getElementById(seatCode);
                    if (button) {
                        button.style.backgroundColor = "green"; // Adjust based on your styling
                        button.removeAttribute("disabled"); // Remove the disabled attribute
                        button.style.color = "black"
                    }
                });
            }

            updateSelectedSeatsUI();
            document.addEventListener("DOMContentLoaded", function () {
                initializeSeatSelection();
            });
        });
    </script>
</head>
    <body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <div class="d-flex justify-content-between align-items-center w-100 ml-5">
                    <div class="Popcorn ">
                        <h4>Seats</h4>
                    </div>
                    <div>
                        <div class="food-and-drink" style="display: inline-block; ">
                            <a class="custom-btn btn btn-primary" asp-controller="Home" asp-action="Index" role="button">Movies</a>
                        </div>
                        <div class="today-date" style="display: inline-block; margin-top: 10px; margin-right: 10px;">
                            <div id="countdownTimer" style="display:none;">Time remaining: 1:00</div>
                        </div>
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <div id="seatLimitAlert" class="alert alert-danger fixed-bottom mb-3" role="alert" style="display: none; position: fixed; bottom: 20px; left: 20px; width: 300px;">
        You can't select more than 3 seats
    </div>
        <div class="container-xl">
            <div id="countdownTimer" style="display:none;">
                 Time remaining: 1:00
            </div>
            <div id="seatInfoContainer">
                <partial name="_SeatInfoPartialView" />
            </div>
        </div>
    </body>
</html>

