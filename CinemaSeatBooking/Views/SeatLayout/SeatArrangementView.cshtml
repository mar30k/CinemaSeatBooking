@model CinemaSeatBooking.Models.SeatLayout
@{
    string formattedDate = DateTime.Now.ToString("MMM-d h.mmtt");
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .container-xl {
            max-width: 100%;
            overflow-x: auto;
        }
            .buttons:hover{
                background-color: green;
                color: white;
                cursor: pointer;
            }

        .buttons {
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0;
            font-size: 10px;
            font-weight: 400;
            background: #fff;
            border: 1px solid #1ea83c;
            border-radius: 2px;
            color: #1ea83c;
            width: 100%;
            height: 100%;
        }

        .hall {
            width: 100%;
            height: 100%;
            overflow: hidden;
        }

            .hall .p {
                display: flex;
                align-items: center;
                justify-content: center;
                margin: 0;
                font-size: 10px;
                font-weight: 400;
                background: #fff;
                width: 100%;
                height: 100%;
            }

        .booked-seat {
            background-color: blue;
            color: white;
        }

    </style>

    <script>
        var selectedSeats = [];

        document.addEventListener("DOMContentLoaded", function () {
            var buttons = document.querySelectorAll('.buttons');

            buttons.forEach(function (button) {
                button.addEventListener('click', function () {
                    var seatCode = this.id;
                    var isBooked = this.getAttribute('data-isBooked') === 'True';
                    var isSold = this.getAttribute('data-isSold') === 'True';

                    toggleSeatSelection(seatCode, isBooked, isSold);
                });
            });
        });

        function toggleSeatSelection(seatCode, isBooked, isSold) {
            if (isBooked || isSold) {
                // Seat is booked or sold, don't allow selection
                return;
            }

            var index = selectedSeats.indexOf(seatCode);

            if (index === -1) {
                // Seat is not selected, check if we can select more seats
                if (selectedSeats.length < 3) {
                    selectedSeats.push(seatCode);
                } else {
                    // Alert or notify the user that they can't select more seats
                    alert("You can only select up to 3 seats.");
                    return;
                }
            } else {
                // Seat is already selected, unselect it
                selectedSeats.splice(index, 1);
            }

            // Toggle background color based on selection
            var button = document.getElementById(seatCode);
            if (button) {
                button.style.backgroundColor = (index === -1) ? "green" : "";
            }

            console.log("Selected Seats: ", selectedSeats);
        }
    </script>

</head>
    <body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <div class="d-flex justify-content-between align-items-center w-100 ml-5">
                    <div class="Popcorn ">
                        <h4>Seats</h4>
                    </div>
                    <div>
                        <div class="food-and-drink" style="display: inline-block; ">
                            <a class="custom-btn btn btn-primary" asp-controller="Home" asp-action="Index" role="button">Movies</a>
                        </div>
                        <div class="today-date" style="display: inline-block; margin-top: 10px; margin-right: 10px;">
                            <p style="margin-left:10px;">@formattedDate</p>
                        </div>
                    </div>
                </div>
            </div>
        </nav>
    </header>
        <div class="container-xl">
            @if (Model != null)
            {
                <div class="container">
                </div>
                @if (Model.Seats != null && Model.Seats.Any())
                {
                <div style="display: flex;justify-content:safe center; align-items: center; overflow-x: auto; margin-top: 30px;">
                    <table>
                        @for (int y = Model.MaxY; y >= 1; y--)
                        {
                            <tr>
                                @for (int x = 1; x <= Model.MaxX; x++)
                                {
                                    <td style="height: 30px !important; width: 30px !important">
                                        @if (Model.Seats.Any(seat => seat.X == x && seat.Y == y && !string.IsNullOrWhiteSpace(seat.Name)))
                                        {
                                            var seat = Model.Seats.First(seat => seat.X == x && seat.Y == y);

                                            // Check if the seat is booked, sold, or taken
                                            var isBooked = Model.BookedSeats?.Contains(seat.Code) ?? false;
                                            var isSold = Model.SoldSeats?.Contains(seat.Code) ?? false;
                                            var isTaken = Model.TakenSeats?.Contains(seat.Code) ?? false;

                                            var backgroundColor = isBooked ? (isSold ? "red" : "blue") : (isTaken ? "orange" : "");
                                            var textColor = isTaken || isBooked || (isBooked && isSold) ? "white" : "";

                                            <button id="@seat.Code" class="buttons" onclick="return false" @(isBooked || isSold || isTaken ? "disabled" : "") style="background-color: @(backgroundColor); color: @(textColor)">
                                                @seat.Name
                                            </button>
                                        }
                                        else
                                        {
                                            <div class="hall">
                                                <p></p>
                                            </div>
                                        }
                                    </td>

                                }
                            </tr>

                        }
                    </table>

                    <div style="margin-top: 20px;">
                        <p>Total Booked Seats: @(Model.BookedSeats?.Count ?? 0)</p>
                        <p>Total Sold Seats: @(Model.SoldSeats?.Count ?? 0)</p>
                        <p>Total Taken Seats: @(Model.TakenSeats?.Count ?? 0)</p>
                        <p>Total Available Seats: @(Model.AvailableSeats?.Count - Model.BookedSeats?.Count ?? 0)</p>
                    </div>
                    </div>
                }
                else
                {
                    <p>No seats available.</p>
                }
            }
            else
            {
                <p>No seat arrangement data available.</p>
            }
        </div>


    </body>
</html>

